
//#include "stdafx.h" //have this for C++
//#include "targetver.h" //have this for C++
#include <stdio.h>
#include <iostream>
#include <stdbool.h>//have this for C



const bool CHAR_NUM [10][7][5] ={//Tell me if I'm wrong but I don't think this should be in a text file, although it can be
{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,1,1},
{1,0,1,0,1},//0
{1,1,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{0,0,1,0,0},
{0,1,1,0,0},
{0,0,1,0,0},
{0,0,1,0,0},//1
{0,0,1,0,0},
{0,0,1,0,0},
{0,1,1,1,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{0,0,0,0,1},
{0,0,0,1,0},//2
{0,0,1,0,0},
{0,1,0,0,0},
{1,1,1,1,1}}
,{
{1,1,1,1,1},
{1,0,0,1,0},
{0,0,1,0,0},
{0,1,1,1,0},//3
{0,0,0,0,1},
{0,0,0,0,1},
{1,1,1,1,0}}
,{
{0,0,0,1,0},
{0,0,1,1,0},
{0,1,0,1,0},
{1,0,0,1,0},//4
{1,1,1,1,1},
{0,0,0,1,0},
{0,0,0,1,0}}
,{
{1,1,1,1,1},
{1,0,0,0,0},
{1,1,1,1,0},
{0,0,0,0,1},//5
{0,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,0},
{1,1,1,1,0},//6
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{1,1,1,1,1},
{1,0,0,0,1},
{0,0,0,0,1},
{0,0,0,1,0},//7
{0,0,1,0,0},
{0,0,1,0,0},
{0,0,1,0,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0},//8
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,1},//9
{0,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
};

const bool CHAR_UPPER[26][7][5] ={//Getting too old for this
{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,1,1,1},//A
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1}}
,{
{1,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,1,1,0},//B
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,1,1,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,0},
{1,0,0,0,0},//C
{1,0,0,0,0},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{1,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},//D
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,1,1,0}}
,{
{1,1,1,1,1},
{1,0,0,0,1},
{1,0,0,0,0},
{1,1,1,0,0},//E
{1,0,0,0,0},
{1,0,0,0,1},
{1,1,1,1,1}}
,{
{1,1,1,1,1},
{1,0,0,0,1},
{1,0,0,0,0},
{1,1,1,0,0},//F
{1,0,0,0,0},
{1,0,0,0,0},
{1,0,0,0,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,0},
{1,0,0,0,0},//G
{1,0,1,1,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,1,1,1},//H
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1}}
,{
{0,1,1,1,0},
{0,0,1,0,0},
{0,0,1,0,0},
{0,0,1,0,0},//I
{0,0,1,0,0},
{0,0,1,0,0},
{0,1,1,1,0}}
,{
{0,0,1,1,1},
{0,0,0,1,0},
{0,0,0,1,0},
{0,0,0,1,0},//J
{1,0,0,1,0},
{1,0,0,1,0},
{0,1,1,0,0}}
,{
{1,0,0,0,1},
{1,0,0,1,0},
{1,0,1,0,0},
{1,1,0,0,0},//K
{1,0,1,0,0},
{1,0,0,1,0},
{1,0,0,0,1}}
,{
{1,0,0,0,0},
{1,0,0,0,0},
{1,0,0,0,0},
{1,0,0,0,0},//L
{1,0,0,0,0},
{1,0,0,0,1},
{1,1,1,1,1}}
,{
{1,0,0,0,1},
{1,1,0,1,1},
{1,0,1,0,1},
{1,0,0,0,1},//M
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,0,0,1},
{1,0,1,0,1},//N
{1,0,0,1,1},
{1,0,0,0,1},
{1,0,0,0,1}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},//O
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{1,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{1,1,1,1,0},//P
{1,0,0,0,0},
{1,0,0,0,0},
{1,0,0,0,0}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},//Q
{1,0,1,0,1},
{1,0,0,1,0},
{0,1,1,0,1}}
,{
{1,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,1},//R
{1,1,1,1,0},
{1,0,1,0,0},
{1,0,0,1,0},
{1,0,0,0,1}}
,{
{0,1,1,1,0},
{1,0,0,0,1},
{1,0,0,0,0},
{0,1,1,1,0},//S
{0,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{1,1,1,1,1},
{1,0,1,0,1},
{0,0,1,0,0},
{0,0,1,0,0},//T
{0,0,1,0,0},
{0,0,1,0,0},
{0,0,1,0,0}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},//U
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,1,1,0}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},//V
{1,0,0,0,1},
{0,1,0,1,0},
{0,0,1,0,0}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},//W
{1,0,1,0,1},
{1,0,1,0,1},
{0,1,0,1,0}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,0,1,0},
{0,0,1,0,0},
{0,1,0,1,0},//X
{1,0,0,0,1},
{1,0,0,0,1}}
,{
{1,0,0,0,1},
{1,0,0,0,1},
{1,0,0,0,1},
{0,1,0,1,0},//Y
{0,0,1,0,0},
{0,0,1,0,0},
{0,0,1,0,0}}
,{
{1,1,1,1,1},
{1,0,0,0,1},
{0,0,0,1,0},
{0,0,1,0,0},//Z
{0,1,0,0,0},
{1,0,0,0,1},
{1,1,1,1,1}}
};



//add period, comma, semicolon, colon, apostrophe, quote, exclamation, question, asterix, hashtag, etc.
//also lowercase letters (On second thought ... )


void replacePixels_number(bool a[48][64], char c, int x, int y){
  for(int i = 0; i < 7; i++){
		for(int j = 0; j < 5; j++){
			a[i+y][j+x]= CHAR_NUM[c][i][j];
		}			
	}//replaces necessary pixels one by one.
}
void replacePixels_upperCase(bool a[48][64], char c, int x, int y){
	for(int i = 0; i < 7; i++){
		for(int j = 0; j < 5; j++){
			a[i+y][j+x]= CHAR_UPPER[c][i][j];
		}			
	}//replaces necessary pixels one by one.
}
/*
NOTE: currently only works for numbers and capital letters, if need be we can add more characters to it.

array: should be a global variable.... COLIN !
char c : the character to be drawn
x, y: the location of the upper left corner of the 5x7 array inside the big 64x48 array
note x and y start from 0
*/

bool drawChar(bool array[48][64], char c, int x, int y){//replace 48 and 64 with a CONST when you feel like it


	if(x>59 || x<0 || y>41 || y<0){
		return 0;// false if out of bounds
	}

	else if(c>='0' && c<='9'){ //Call replacePixels function for numbers only
			replacePixels_number(array, c-48, x, y);
	}
	else if(c>='A' && c<='Z'){ //Call replacePixels function for capital letters only
			replacePixels_upperCase(array, c-65 , x, y);
	}

	return 1;
}

bool drawNumber(){
	return 1;
}
void printTest(bool array[48][64]){
	int i, j;
	for(i = 0; i < 48; i++){
		for(j = 0; j < 64; j++){
			if(array[i][j] == true){
				printf("O", array[i][j]);
			}
			else{
				printf(" ", array[i][j]);
			}
		}
		printf("\n");
	}
}

int main()//For testing Purposes only
{
	bool board[48][64] = {false};
	bool test;
	test = drawChar(board,'J',59,41);

	printTest(board);
	//system("Pause");//needed for C++
	return 0;
}

